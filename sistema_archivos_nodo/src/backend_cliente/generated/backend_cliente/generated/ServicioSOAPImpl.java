
package backend_cliente.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServicioSOAPImpl", targetNamespace = "http://central/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioSOAPImpl {


    /**
     * 
     * @param ruta
     * @param nombre
     * @param token
     * @return
     *     returns backend_cliente.generated.Archivo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "descargarArchivo", targetNamespace = "http://central/", className = "backend_cliente.generated.DescargarArchivo")
    @ResponseWrapper(localName = "descargarArchivoResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.DescargarArchivoResponse")
    @Action(input = "http://central/ServicioSOAPImpl/descargarArchivoRequest", output = "http://central/ServicioSOAPImpl/descargarArchivoResponse")
    public Archivo descargarArchivo(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "ruta", targetNamespace = "")
        String ruta,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param origen
     * @param destino
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "moverArchivo", targetNamespace = "http://central/", className = "backend_cliente.generated.MoverArchivo")
    @ResponseWrapper(localName = "moverArchivoResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.MoverArchivoResponse")
    @Action(input = "http://central/ServicioSOAPImpl/moverArchivoRequest", output = "http://central/ServicioSOAPImpl/moverArchivoResponse")
    public void moverArchivo(
        @WebParam(name = "origen", targetNamespace = "")
        String origen,
        @WebParam(name = "destino", targetNamespace = "")
        String destino,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param contrasena
     * @param email
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "iniciarSesion", targetNamespace = "http://central/", className = "backend_cliente.generated.IniciarSesion")
    @ResponseWrapper(localName = "iniciarSesionResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.IniciarSesionResponse")
    @Action(input = "http://central/ServicioSOAPImpl/iniciarSesionRequest", output = "http://central/ServicioSOAPImpl/iniciarSesionResponse")
    public String iniciarSesion(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "contrasena", targetNamespace = "")
        String contrasena);

    /**
     * 
     * @param archivo
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "subirArchivo", targetNamespace = "http://central/", className = "backend_cliente.generated.SubirArchivo")
    @ResponseWrapper(localName = "subirArchivoResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.SubirArchivoResponse")
    @Action(input = "http://central/ServicioSOAPImpl/subirArchivoRequest", output = "http://central/ServicioSOAPImpl/subirArchivoResponse")
    public void subirArchivo(
        @WebParam(name = "archivo", targetNamespace = "")
        Archivo archivo,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param nombre
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarArchivo", targetNamespace = "http://central/", className = "backend_cliente.generated.EliminarArchivo")
    @ResponseWrapper(localName = "eliminarArchivoResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.EliminarArchivoResponse")
    @Action(input = "http://central/ServicioSOAPImpl/eliminarArchivoRequest", output = "http://central/ServicioSOAPImpl/eliminarArchivoResponse")
    public void eliminarArchivo(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param archivo
     * @param usuario
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "compartirArchivo", targetNamespace = "http://central/", className = "backend_cliente.generated.CompartirArchivo")
    @ResponseWrapper(localName = "compartirArchivoResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.CompartirArchivoResponse")
    @Action(input = "http://central/ServicioSOAPImpl/compartirArchivoRequest", output = "http://central/ServicioSOAPImpl/compartirArchivoResponse")
    public void compartirArchivo(
        @WebParam(name = "archivo", targetNamespace = "")
        Archivo archivo,
        @WebParam(name = "usuario", targetNamespace = "")
        Usuario usuario,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param contrasena
     * @param nombre
     * @param email
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarse", targetNamespace = "http://central/", className = "backend_cliente.generated.Registrarse")
    @ResponseWrapper(localName = "registrarseResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.RegistrarseResponse")
    @Action(input = "http://central/ServicioSOAPImpl/registrarseRequest", output = "http://central/ServicioSOAPImpl/registrarseResponse")
    public String registrarse(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "contrasena", targetNamespace = "")
        String contrasena);

    /**
     * 
     * @param ruta
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "crearDirectorio", targetNamespace = "http://central/", className = "backend_cliente.generated.CrearDirectorio")
    @ResponseWrapper(localName = "crearDirectorioResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.CrearDirectorioResponse")
    @Action(input = "http://central/ServicioSOAPImpl/crearDirectorioRequest", output = "http://central/ServicioSOAPImpl/crearDirectorioResponse")
    public void crearDirectorio(
        @WebParam(name = "ruta", targetNamespace = "")
        String ruta,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param token
     * @return
     *     returns backend_cliente.generated.ArbolEspacio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consultarEspacioConsumido", targetNamespace = "http://central/", className = "backend_cliente.generated.ConsultarEspacioConsumido")
    @ResponseWrapper(localName = "consultarEspacioConsumidoResponse", targetNamespace = "http://central/", className = "backend_cliente.generated.ConsultarEspacioConsumidoResponse")
    @Action(input = "http://central/ServicioSOAPImpl/consultarEspacioConsumidoRequest", output = "http://central/ServicioSOAPImpl/consultarEspacioConsumidoResponse")
    public ArbolEspacio consultarEspacioConsumido(
        @WebParam(name = "token", targetNamespace = "")
        String token);

}
